
+ A program for the second PRU that modulates the first PRU with varicode
  coded raised cosine filtered 31.25 BPSK, loaded from the keyboard or stdin.
  Still mulling over the right way to do this, but it'll be next.

+ A program for the second PRU that modulates the first PRU with raised
  cosine filtered CW, loaded from a text file or stdin

+ A program for the second PRU that modulates the first PRU with FM, loaded
  from a file of raw samples, in a sort of circular buffer, that when 
  the PRU has read in and output half of it's buffer, it sends an interrupt
  to the main CPU requesting that half be filled with new samples.

+ Add a 'make install' target after binary list stabilizes (I may get rid of
  programs like wobbulate, for example)

+ Throw a quick schematic in the source directory for a simple R-2R filter.

+ Turn util.c into a library, perhaps

=== Below are things that are done ===

+ A program for the second PRU that modulates the first PRU with AM, loaded
  from a file of raw samples, in a sort of circular buffer, that when 
  the PRU has read in and output half of it's buffer, it sends an interrupt
  to the main CPU requesting that half be filled with new samples. [DONE]

+ I'm presently comtemplating dropping half of the wavetable so it's only
  4ksam in size, so I can use the rest of PRU memory for configuration,
  for example, passing in skiplen without having to restart the code.
  Doing this will likely lower the samplerate more, but will allow for
  instantaneous frequency changes with no glitches under (main CPU)
  software control.  [DONE, CONFIGURABLE EVEN]

+ Also on the horizon, using the PRU's MAC to allow for amplitude modification,
  which will be another integer we pass through PRU DataRam as we do with
  skiplen.  Not sure if we can do multiplication of signed integers, but that
  would be the easiest way to implement a cosine-shaped BPSK transmitter.  I
  can then, of course, write a BPSK transmitter that runs in the second PRU.
  Or an ASK transmitter, or AM, or QAM, or whatever.
  I may try writing this code using the hardware MAC, and write another 
  version using prosthaphaeresis, then compare the two. [DONE, Using hardware MAC]

+ rename project to "pru-dds" (there's nothing specifically 8-bit about it
  any more) [DONE]

